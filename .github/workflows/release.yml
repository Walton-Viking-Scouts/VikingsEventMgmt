name: üöÄ Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

env:
  SENTRY_HOST: https://walton-vikings.sentry.io
  SENTRY_ORG: walton-vikings
  SENTRY_PROJECT: viking-event-mgmt
  SENTRY_RELEASE_PREFIX: vikings-eventmgmt-mobile
  SENTRY_URL: https://sentry.io

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.sentry-release.outputs.version }}
      release-name: ${{ steps.sentry-release.outputs.release-name }}
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üß™ Run tests
        env:
          VITE_API_URL: https://vikingeventmgmtapi.onrender.com
          VITE_OAUTH_CLIENT_ID: test_client_id
        run: |
          npm run test:run
          npm run lint

      - name: üî® Build with Sentry integration
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          # Extract version for build process
          VERSION="${{ github.ref_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          SENTRY_RELEASE="${{ env.SENTRY_RELEASE_PREFIX }}@$VERSION"

          echo "Building release: $VERSION"
          echo "Sentry release: $SENTRY_RELEASE"

          # Export for Vite plugin to use consistent release naming
          export SENTRY_RELEASE="$SENTRY_RELEASE"
          
          npm run build

      - name: üì§ Create and finalize Sentry release
        id: sentry-release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ env.SENTRY_URL }}
        run: |
          set -euo pipefail  # Bash safety flags
          
          # Extract version and create consistent release name (strip 'v' prefix)
          VERSION="${{ github.ref_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          RELEASE="${{ env.SENTRY_RELEASE_PREFIX }}@$VERSION"
          
          # Export clean version and release name to GitHub Actions environment for reuse
          echo "CLEAN_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE" >> $GITHUB_ENV
          
          # Also expose as step outputs for cross-job and expression context usage
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "release-name=$RELEASE" >> $GITHUB_OUTPUT
          
          echo "Processing Sentry release: $RELEASE"

          # Check if release already exists (created by Vite plugin)
          if npx @sentry/cli releases info "$RELEASE" > /dev/null 2>&1; then
            echo "Release $RELEASE already exists, skipping creation"
          else
            echo "Creating new release: $RELEASE"
            npx @sentry/cli releases new "$RELEASE"
          fi
          
          # Verify source maps were uploaded
          echo "Checking source maps..."
          if npx @sentry/cli releases files "$RELEASE" list | grep -qE '\.map(\.gz)?$'; then
            echo "Source maps found in release"
          else
            echo "No source maps found, uploading manually..."
            if [ -d "./dist" ] && [ "$(find ./dist -name '*.map' | wc -l)" -gt 0 ]; then
              echo "Found source maps in dist directory, uploading..."
              npx @sentry/cli sourcemaps inject ./dist
              npx @sentry/cli sourcemaps upload --release "$RELEASE" --url-prefix "~/" ./dist
            else
              echo "Warning: No source map files found in ./dist directory"
              find ./dist -type f \( -name "*.js" -o -name "*.map" \) | head -10
            fi
          fi
          
          # Set commits and finalize
          npx @sentry/cli releases set-commits "$RELEASE" --auto
          npx @sentry/cli releases finalize "$RELEASE"

          echo "Sentry release $RELEASE completed successfully"

      - name: üêô Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## üîÑ Changes
            
            Release ${{ github.ref_name }}
            
            ## üîó Sentry Release
            
            View detailed error tracking and performance monitoring in Sentry:
            ${{ env.SENTRY_HOST }}/organizations/${{ env.SENTRY_ORG }}/releases/${{ steps.sentry-release.outputs.release-name }}/
            
            ## üìä Issue Resolution
            
            This release may resolve the following Sentry issues:
            - Check the Sentry release page for automatic issue resolution
            - Issues first seen after the previous release will be marked as resolved
          draft: false
          prerelease: false

  deploy-notification:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: üöÄ Mark deployment in Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ env.SENTRY_URL }}
        run: |
          set -euo pipefail  # Bash safety flags

          # Use job output for consistent release name access
          npx @sentry/cli releases deploys "${{ needs.release.outputs.release-name }}" new -e production
